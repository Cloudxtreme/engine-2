{"version":3,"sources":["../../../../../src/World/ObjectTypes/EventedObjectType/EventedObjectType.spec.js"],"names":["describe","it","then","expect","traits","emitter","EventEmitter","toBeTruthy","instance","beforeEach","object","on","jest","fn","bar","toHaveBeenCalledWith","emit"],"mappings":";;AAAA;;AAEA;;AAEAA,SAAS,mBAAT,EAA8B,YAAM;AAChCC,OAAG,8BAAH,EAAmC,YAAM;AACrC,eAAO,4CACFC,IADE,CACG;AAAA,mBAAUC,OAAOC,OAAOC,OAAP,YAA0BC,oBAAjC,EAA+CC,UAA/C,EAAV;AAAA,SADH,CAAP;AAEH,KAHD;;AAKAP,aAAS,IAAT,EAAe,YAAM;AACjB,YAAIQ,iBAAJ;AACAC,mBAAW,YAAM;AACbD,uBAAW,2CAAX;AACH,SAFD;;AAIAP,WAAG,8CAAH,EAAmD,YAAK;AACpD,mBAAOO,SACFN,IADE,CACG,kBAAU;AACZQ,uBAAOL,OAAP,CAAeM,EAAf,GAAoBC,KAAKC,EAAL,EAApB;AACAH,uBAAOC,EAAP,CAAU,KAAV,EAAiB,EAACG,KAAK,KAAN,EAAjB;AACA,uBAAOX,OAAOO,OAAOL,OAAP,CAAeM,EAAtB,EAA0BI,oBAA1B,CAA+C,KAA/C,EAAsD,EAACD,KAAK,KAAN,EAAtD,CAAP;AACH,aALE,CAAP;AAMH,SAPD;;AASAb,WAAG,8CAAH,EAAmD,YAAK;AACpD,mBAAOO,SACFN,IADE,CACG,kBAAU;AACZQ,uBAAOL,OAAP,CAAeW,IAAf,GAAsBJ,KAAKC,EAAL,EAAtB;AACAH,uBAAOM,IAAP,CAAY,KAAZ,EAAmB,EAACF,KAAK,KAAN,EAAnB;AACA,uBAAOX,OAAOO,OAAOL,OAAP,CAAeW,IAAtB,EAA4BD,oBAA5B,CAAiD,KAAjD,EAAwD,EAACD,KAAK,KAAN,EAAxD,CAAP;AACH,aALE,CAAP;AAMH,SAPD;AAQH,KAvBD;AAwBH,CA9BD","file":"EventedObjectType.spec.js","sourcesContent":["import {EventEmitter} from 'events';\n\nimport {EventedObjectType} from \"./EventedObjectType\";\n\ndescribe('EventedObjectType', () => {\n    it('should have an event emitter', () => {\n        return EventedObjectType()\n            .then(traits => expect(traits.emitter instanceof EventEmitter).toBeTruthy())\n    });\n\n    describe('on', () => {\n        let instance;\n        beforeEach(() => {\n            instance = EventedObjectType();\n        });\n\n        it('adds the event emitter to the actual emitter', () =>{\n            return instance\n                .then(object => {\n                    object.emitter.on = jest.fn();\n                    object.on('foo', {bar: 'baz'});\n                    return expect(object.emitter.on).toHaveBeenCalledWith('foo', {bar: 'baz'})\n                })\n        });\n\n        it('adds the event emitter to the actual emitter', () =>{\n            return instance\n                .then(object => {\n                    object.emitter.emit = jest.fn();\n                    object.emit('foo', {bar: 'baz'});\n                    return expect(object.emitter.emit).toHaveBeenCalledWith('foo', {bar: 'baz'})\n                })\n        })\n    })\n});"]}