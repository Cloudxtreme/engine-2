{"version":3,"sources":["../../../../../src/World/ObjectTypes/ObjectType/ObjectType.js"],"names":["Bluebird","lodash","validate","uuid","ObjectSchema","presence","key","objectType","validateObject","object","schema","Promise","resolve","reject","async","cleanAttributes","then","validators","value","options","t","catch","e","all","map","v","values","ObjectType","traits","v1","createdAt","Date","updatedAt","prefix","kebabCase","replace","suffix","slice","beforeValidate","p","merge","inherits","nameOrType","name","indexOf","inherited","combine","types","last","beforeValidateHooks","afterValidateHooks","preparedTypes","push","type","trts","reduce","aggregateType","afterValidate","newObject","keys","forEach","bind","r","hook","each"],"mappings":"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","file":"ObjectType.js","sourcesContent":["import * as Bluebird from \"bluebird\";\nimport * as lodash from \"lodash\";\nimport * as validate from \"validate.js\";\nimport * as uuid from \"uuid\";\n\nconst ObjectSchema = {\n    uuid: {\n        presence: true\n    },\n    key: {\n        presence: true\n    },\n    objectType: {\n        presence: true\n    },\n};\n\nconst validateObject = (object, schema) => {\n    return new Promise((resolve, reject) => {\n        return validate.async(object, schema, { cleanAttributes: false }).then(resolve, reject);\n    });\n};\n\nvalidate.validators.objectType = (value, options) => {\n    return new Promise((resolve, reject) => {\n        if (!value) return resolve();\n\n        if (options === true) {\n            const t = value;\n            return validateObject(t, t.schema)\n                .then(() => resolve())\n                .catch(e => resolve(e));\n        } else if (options === \"array\") {\n            const t = value;\n            return Bluebird.all(t.map(v => validateObject(v, v.schema)))\n                .then(() => resolve())\n                .catch(e => resolve(e));\n        } else if (options === \"object\") {\n            const t = value;\n            return Bluebird.all(lodash.values(t).map(v => validateObject(v, v.schema)))\n                .then(() => resolve())\n                .catch(e => resolve(e));\n        } else {\n            return reject(\"invalid option\");\n        }\n    });\n};\n\nconst ObjectType = traits => {\n    // set the defaults\n    if (!traits.uuid) traits.uuid = uuid.v1();\n    if (!traits.createdAt) traits.createdAt = new Date();\n    if (!traits.updatedAt) traits.updatedAt = traits.createdAt;\n\n    // auto generate the key if not present\n    if (!traits.key) {\n        const prefix = lodash.kebabCase(traits.objectType.replace(\"ObjectType\", \"\"));\n        const suffix = traits.uuid.slice(-5);\n        traits.key = `${prefix}:${suffix}`;\n    }\n\n    // add a default beforeValidate hook\n    if (!traits.beforeValidate) traits.beforeValidate = p => Promise.resolve(p);\n\n    return {\n        schema: lodash.merge({}, traits.schema || {}, ObjectSchema),\n        ...traits,\n        inherits(nameOrType) {\n            if (typeof nameOrType === \"function\") {\n                nameOrType = nameOrType.name;\n            }\n\n            return lodash.indexOf(this.inherited, nameOrType) !== -1;\n        }\n    };\n};\n\nexport const combine = (...types) => {\n    const objectType = lodash.last(types).name;\n    return (traits = {}) => {\n        const beforeValidateHooks = [];\n        const afterValidateHooks = [];\n        const inherited = [];\n\n        const preparedTypes = types.map(type => {\n            inherited.push(type.name);\n            if (typeof type === \"function\") return trts => Bluebird.resolve(type(trts));\n            return type;\n        });\n\n        return Bluebird.reduce(\n            preparedTypes,\n            (aggregateType, type) => {\n                return type(aggregateType).then(t => {\n                    if (t.beforeValidate) beforeValidateHooks.push(t.beforeValidate);\n                    if (t.afterValidate) afterValidateHooks.push(t.afterValidate);\n                    return {...{}, ...t, objectType};\n                });\n            },\n            { ...traits, objectType, inherited }\n        )\n            .then(newObject => ObjectType(newObject))\n            .then(newObject => {\n                lodash.keys(newObject).forEach(key => {\n                    const value = newObject[key];\n                    if (typeof value === \"function\") {\n                        newObject[key] = value.bind(newObject);\n                    }\n                });\n\n                return newObject;\n            })\n            .then(newObject =>\n                Bluebird.reduce(beforeValidateHooks, (r, hook) => hook(r), newObject)\n            )\n            .then(newObject => Bluebird.each(afterValidateHooks, (hook) => hook.bind(newObject)()).then(() => newObject))\n            .then(newObject => {\n                if (!newObject.schema) return;\n                return validate.async(newObject, newObject.schema, { cleanAttributes: false });\n            });\n    };\n};\n"]}