{"version":3,"sources":["../../../../../src/World/ObjectTypes/ContainerObjectType/ContianerObjectType.js"],"names":["ContainerObjectType","schema","objects","presence","objectType","traits","addObject","object","container","key","emit","removeObject","objectOrKey","objectToRemove","afterValidate","on","EventedObjectType"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA,IAAIA,sBAAsB,qCAAU;AAChC,QAAMC,SAAS;AACXC,iBAAS;AACLC,sBAAU,IADL;AAELC,wBAAY;AAFP;AADE,KAAf;;AAOA;AACIF,iBAAS;AADb,OAEOG,MAFP;AAGIJ,sBAHJ;AAIIK,iBAJJ,qBAIcC,MAJd,EAIsB;AACdA,mBAAOC,SAAP,GAAmB,IAAnB;AACA,iBAAKN,OAAL,CAAaK,OAAOE,GAApB,IAA2BF,MAA3B;AACA,iBAAKG,IAAL,CAAU,cAAV,WAA+B,EAA/B,EAAsCH,MAAtC;AACH,SARL;AASII,oBATJ,wBASiBC,WATjB,EAS8B;AACtB,gBAAI,QAAOA,WAAP,yCAAOA,WAAP,OAAuB,QAA3B,EAAqC;AACjCA,8BAAcL,OAAOE,GAArB;AACH;AACD,gBAAMI,0BAAsB,EAAtB,EAA6B,KAAKX,OAAL,CAAaU,WAAb,CAA7B,CAAN;AACA,mBAAOC,eAAeL,SAAtB;AACA,mBAAO,KAAKN,OAAL,CAAaU,WAAb,CAAP;AACA,iBAAKF,IAAL,CAAU,gBAAV,EAA4BG,cAA5B;AACH,SAjBL;AAkBIC,qBAlBJ,2BAkBoB;AAAA;;AACZ,iBAAKC,EAAL,CAAQ,gBAAR,EAA0B,kBAAU;AAChC,oBAAI,MAAKP,SAAT,EAAoB;AAChB,0BAAKA,SAAL,CAAeE,IAAf,CAAoB,8BAApB,EAAoD;AAChDD,6BAAK,MAAKA,GADsC;AAEhDF,gCAAQA;AAFwC,qBAApD;AAIH;AACJ,aAPD;AAQA,iBAAKQ,EAAL,CAAQ,8BAAR,EAAwC,gBAAmB;AAAA,oBAAjBN,GAAiB,QAAjBA,GAAiB;AAAA,oBAAZF,MAAY,QAAZA,MAAY;;AACvD,oBAAI,MAAKC,SAAT,EAAoB;AAChB,0BAAKA,SAAL,CAAeE,IAAf,CAAoB,8BAApB,EAAoD,EAACD,KAAQ,MAAKA,GAAb,SAAoBA,GAArB,EAA4BF,cAA5B,EAApD;AACH;AACJ,aAJD;AAKA,iBAAKQ,EAAL,CAAQ,cAAR,EAAwB,kBAAU;AAC9B,oBAAI,MAAKP,SAAT,EAAoB;AAChB,0BAAKA,SAAL,CAAeE,IAAf,CAAoB,0BAApB,EAAgD,EAACD,KAAQ,MAAKA,GAAb,SAAoBF,OAAOE,GAA5B,EAAmCF,cAAnC,EAAhD;AACH;AACJ,aAJD;AAKA,iBAAKQ,EAAL,CAAQ,0BAAR,EAAoC,iBAAmB;AAAA,oBAAjBN,GAAiB,SAAjBA,GAAiB;AAAA,oBAAZF,MAAY,SAAZA,MAAY;;AACnD,oBAAG,MAAKC,SAAR,EAAmB;AACf,0BAAKA,SAAL,CAAeE,IAAf,CAAoB,0BAApB,EAAgD,EAACD,KAAQ,MAAKA,GAAb,SAAoBA,GAArB,EAA4BF,cAA5B,EAAhD;AACH;AACJ,aAJD;AAKH;AA1CL;AA4CH,CApDD;;AAsDA,QAESP,mBAFT,yBAAsB,yBAAQgB,oCAAR,EAA2BhB,mBAA3B,CAAtB;;QAESA,mB,GAAAA,mB","file":"ContianerObjectType.js","sourcesContent":["import { combine } from \"../ObjectType\";\nimport { EventedObjectType } from \"../EventedObjectType\";\n\nlet ContainerObjectType = traits => {\n    const schema = {\n        objects: {\n            presence: true,\n            objectType: \"object\"\n        }\n    };\n\n    return {\n        objects: {},\n        ...traits,\n        schema,\n        addObject(object) {\n            object.container = this;\n            this.objects[object.key] = object;\n            this.emit(\"object.added\", { ...{}, ...object });\n        },\n        removeObject(objectOrKey) {\n            if (typeof objectOrKey === \"object\") {\n                objectOrKey = object.key;\n            }\n            const objectToRemove = { ...{}, ...this.objects[objectOrKey] };\n            delete objectToRemove.container;\n            delete this.objects[objectOrKey];\n            this.emit(\"object.removed\", objectToRemove);\n        },\n        afterValidate() {\n            this.on(\"object.removed\", object => {\n                if (this.container) {\n                    this.container.emit(\"object.removedFromDescendant\", {\n                        key: this.key,\n                        object: object\n                    });\n                }\n            });\n            this.on('object.removedFromDescendant', ({key, object}) => {\n                if (this.container) {\n                    this.container.emit(\"object.removedFromDescendant\", {key: `${this.key}.${key}`, object})\n                }\n            });\n            this.on('object.added', object => {\n                if (this.container) {\n                    this.container.emit('object.addedToDescendant', {key: `${this.key}.${object.key}`, object})\n                }\n            });\n            this.on('object.addedToDescendant', ({key, object}) => {\n                if(this.container) {\n                    this.container.emit(\"object.addedToDescendant\", {key: `${this.key}.${key}`, object})\n                }\n            })\n        }\n    };\n};\n\nContainerObjectType = combine(EventedObjectType, ContainerObjectType);\n\nexport { ContainerObjectType };\n"]}